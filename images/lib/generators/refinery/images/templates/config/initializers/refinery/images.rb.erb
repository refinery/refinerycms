# encoding: utf-8
Refinery::Images.configure do |config|

  #  Refinery::Images configuration

  # Configures the maximum allowed upload size (in bytes) for an image
  # config.max_image_size = <%= Refinery::Images.max_image_size.inspect %>

  # Configure how many images per page should be displayed when a dialog is presented that contains images
  # config.pages_per_dialog = <%= Refinery::Images.pages_per_dialog.inspect %>

  # Configure how many images per page should be displayed when a dialog is presented that
  # contains images and image resize options
  # config.pages_per_dialog_that_have_size_options = <%= Refinery::Images.pages_per_dialog_that_have_size_options.inspect %>

  # Configure how many images per page should be displayed in the list of images in the admin area
  # config.pages_per_admin_index = <%= Refinery::Images.pages_per_admin_index.inspect %>

  # Configure image sizes
  # config.user_image_sizes = <%= Refinery::Images.user_image_sizes.inspect %>

  # Configure image ratios
  # config.user_image_ratios = <%= Refinery::Images.user_image_ratios.inspect %>

  # Configure allowed mime types for validation
  # config.allowed_mime_types = <%= Refinery::Images.allowed_mime_types.inspect %>

  # Configure image view options
  # config.image_views = <%= Refinery::Images.image_views.inspect %>

  # Configure default image view
  # config.preferred_image_view = <%= Refinery::Images.preferred_image_view.inspect %>

  # Configure Dragonfly.
  # Refer to config/initializers/refinery/dragonfly.rb for the full list of dragonfly configurations which can be used.
  # This includes all dragonfly config for Dragonfly v 1.1.1

  config.dragonfly_name = :refinery_images
  # config.dragonfly_verify_urls = <%= Refinery::Images.dragonfly_verify_urls.inspect %>
  # config.dragonfly_secret = <%= Refinery::Images.dragonfly_secret.inspect %>
  # config.dragonfly_url_host = <%= Refinery::Images.dragonfly_url_host.inspect %>
  # config.dragonfly_datastore_root_path = <%= Refinery::Images.dragonfly_datastore_root_path.inspect %>
  # config.dragonfly_url_format = <%= Refinery::Images.dragonfly_url_format.inspect %>


  # Configure Dragonfly custom datastore
  # The custom_datastore setting by default defers to the Refinery::Images setting for this but can be set just for images.
  # config.dragonfly_custom_datastore_class = <%= Refinery::Images.dragonfly_custom_datastore_class.inspect %>
  # config.dragonfly_custom_datastore_opts = <%= Refinery::Images.dragonfly_custom_datastore_opts.inspect %>

  # Configure S3 (you can also use ENV for this)
  # The s3_datastore setting by default defers to the Refinery::Dragonfly setting for this but can be set just for images.
  # config.s3_datastore = Refinery::Dragonfly.s3_datastore
  # config.s3_bucket_name = ENV['S3_BUCKET']
  # config.s3_access_key_id = ENV['S3_KEY']
  # config.s3_secret_access_key = ENV['S3_SECRET']
  # config.s3_region = ENV['S3_REGION']
  #
  #  further S3 configuration options
  # config.s3_fog_storage_options = <%= Refinery::Images.s3_fog_storage_options.inspect %>
  # config.s3_root_path = <%= Refinery::Images.s3_root_path.inspect %>
  # config.s3_storage_path = <%= Refinery::Images.s3_storage_path.inspect %>
  # config.s3_storage_headers = <%= Refinery::Images.s3_storage_headers.inspect %>
  # config.s3_url_host = <%= Refinery::Images.s3_url_host.inspect %>
  # config.s3_url_scheme = <%= Refinery::Images.s3_url_scheme.inspect %>
  # config.s3_use_iam_profile = <%= Refinery::Images.s3_use_iam_profile.inspect %>

end
