<% username_capitalized = @resource.username.present? ? @resource.username.split.map(&:capitalize).join(' ') : @resource.username -%>

<% unless @resource.confirmed? %>
  <div class="margin-bottom-sm">
    <p>
      Please create a super secret password below.
    </p>
    <p>
      In the future, use your full name '<%= username_capitalized %>' or email address '<%= @resource.email %>' to log in.
      You have the option of changing your name/email later.
    </p>
  </div>
<% else %>
  <div class="margin-bottom-sm">
    <p>
      Pick a new password
    </p>
  </div>
<% end %>

<%= form_for resource, :as => resource_name,
             :url => refinery.refinery_user_password_path,
             :html => { :method => :put } do |f| %>
  <%= f.hidden_field :reset_password_token %>

  <%= render '/refinery/admin/error_messages', :object => @resource, :include_object_name => true %>

  <div class='form-group'>
    <%= f.text_field :username, value: username_capitalized,class: 'form-control input-lg', readonly: true %>
  </div>

  <div class='form-group'>
    <div class='validate'>
      <span></span>
    </div>
    <%= f.password_field :password, :autocomplete => 'off', :class => 'form-control input-lg',
                         :placeholder => 'Password', 'data-validate'=> 'required' -%>
  </div>

  <div class='form-group'>
    <div class='validate'>
      <span></span>
    </div>
    <%= f.password_field :password_confirmation, :autocomplete => 'off', :class => 'form-control input-lg',
                         :placeholder => 'Password Confirmation', 'data-validate'=> 'required' -%>
  </div>

  <%= render '/refinery/admin/form_actions', :f => f,
             :continue_editing => false,
             :submit_button_text => @resource.confirmed? ? t('reset_password', :scope => 'refinery.users.reset') : 'Set Password & Log in',
             :cancel_url => refinery.login_path,
             :cancel_title => nil,
             :hide_delete => true -%>
<% end -%>
