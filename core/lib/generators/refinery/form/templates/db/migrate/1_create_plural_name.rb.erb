class Create<%= class_name.pluralize %> < ActiveRecord::Migration

  def up
    create_table :refinery_<%= table_name %> do |t|
<% attributes.each do |attribute|
        db_attribute = { type: attribute.type, name: attribute.name }
        # turn image or resource into what it was supposed to be which is an integer reference to an image or resource.
        case attribute.type
        when :image, :resource
          db_attribute[:type] = :integer
          db_attribute[:name] = "#{attribute.name}_id"
        when :radio, :select, :dropdown
          db_attribute[:type] = :string
        when :checkbox
          db_attribute[:type] = :boolean
        end -%>
      t.<%= db_attribute[:type] %> :<%= db_attribute[:name] %>
<% end -%>
<% if include_spam? %>
       t.boolean :spam, :default => false
     <% end %>
      t.timestamps
    end

    add_index :refinery_<%= table_name %>, :id
  end

  def down
    if defined?(::Refinery::UserPlugin)
      ::Refinery::UserPlugin.destroy_all({:name => "<%= plural_name %>"})
    end

    if defined?(::Refinery::Page)
      ::Refinery::Page.delete_all({:link_url => "/<%= plural_name %>"})
    end

    drop_table :refinery_<%= table_name %>
end

end
