<%- sections = page_sections(@page, local_assigns) -%>

<%#= page_body_content do -%>
  <%#- sections.collect{|section| section[:html] = yield(section[:yield])} -%>
  <%#- sections.collect do |section| -%>
    <%#= page_html(section, local_assigns) -%>
  <%#- end -%>
<%#- end -%>

<%#- Backwards compatibility block:
     Remove the following section and uncomment
     the above page helpers on new applications.
-%>
<%-
  css = []
  sections.each do |section|
    section[:html] = yield(section[:yield]) if section[:yield].present?

    if section[:html].blank? and !local_assigns[:show_empty_sections] and
       !local_assigns[:remove_automatic_sections] and section.keys.include?(:fallback) and
       section[:fallback].present?
      section[:html] = raw(section[:fallback])
    end

    dom_id = section[:id] || section[:yield]
    if section[:html].present?
      if section[:title]
        section[:html] = "<h1 id='#{dom_id}'>#{section[:html]}</h1>".html_safe
      else
        section[:html] = "<section id='#{dom_id}'><div class='inner'>#{section[:html]}</div></section>".html_safe
      end
    else
      css << "no_#{dom_id}"
    end
  end
-%>

<section id='body_content'<%= " class='#{css.join(' ')}'" if css.present? %>>
  <%= raw sections.map{|section| section[:html]}.join("\n") -%>
</section>
<%#- End BC -%>

<%= render :partial => '/shared/draft_page_message' unless @page.nil? or @page.live? -%>
