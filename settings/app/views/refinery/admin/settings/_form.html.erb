<%= form_for [main_app, :refinery_admin, @setting] do |f| %>

  <%= render :partial => "/refinery/admin/error_messages",
             :locals => {
               :object => @setting,
               :include_object_name => true
             } %>

  <div class='field'>
    <%= f.label :name %>
  <% if action_name =~ /(new)|(create)/ %>
    <%= f.text_field :name, :class => "larger widest" %>
  <% else %>
    <label class='stripped' for='setting_value'>
      <%= @setting.title %>
    </label>
    <span class="preview">- (<%= @setting.name %>)</span>
  <% end %>
  <% if current_refinery_user.has_role?(:superuser) && @setting.new_record? %>
    <div class='field'>
      <%= f.label :form_value_type %>
      <%= f.select :form_value_type, ::Refinery::Setting::FORM_VALUE_TYPES -%>
    </div>
  <% end %>
  <% unless action_name =~ /(new)|(create)/ or (help = t(@setting.name, :scope => 'refinery.admin.settings.form.help', :default => '')).blank? or @setting.form_value_type == 'check_box'  %>
    <p>
      <span><%= help %></span>
    </p>
  <% end %>
  <% if current_refinery_user.has_role?(:superuser) %>
    <span class='label_with_help'>
      <%= f.label :restricted %>
      <%= refinery_help_tag t('restricted', :scope => 'refinery.admin.settings.form.help') %>
    </span>
    <%= f.check_box :restricted %>
    <%= f.label :restricted, t('.yes_make_this_setting_restricted'), :class => 'stripped' %>
  <% end %>
  </div>
  <div class='field'>
    <%= setting_title(f) %>
    <%= setting_field(f, help) %>
  </div>

  <%= render :partial => "/refinery/admin/form_actions",
             :locals => {
               :f => f,
               :continue_editing => false,
               :hide_cancel => from_dialog?,
               :submit_button_title => t('.restart_may_be_in_order_html'),
               :delete_title => t('delete', :scope => 'refinery.admin.settings'),
               :delete_confirmation => t('message', :scope => 'refinery.admin.delete',
                                         :title => @setting.title),
               :hide_delete => (@setting.new_record? or !@setting.destroyable or from_dialog?)
              } %>
<% end -%>
<% content_for :javascripts do %>
  <script>
    $('#setting_form_value_type').change(function(e) {
      window.location = location_url + ((location_url.indexOf("?") > -1 ? "&" : "?") + "form_value_type=" + $(this).val());
    });
  </script>
<% end if current_refinery_user.has_role?(:superuser) %>
